spring:
  application:
    name: school
  datasource:
#    platform: postgres
    url: ${URL_DATABASE:jdbc:postgresql://localhost:5432/school_db}
    username: postgres
    password: postgres
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQL81Dialect

  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}
    port: ${RABBITMQ_PORT:5672}

server:
  port: 8070

key: ABCDabcd1234


keycloak:
  auth-server-url: ${KEYCLOAK_AUTH_SERVER_URL:http://localhost:8080/auth}
  autodetect-bearer-only: true
  resource: farmacia
  credentials:
    secret: bd327a20-d3c4-4f11-a90c-ee065b3073e6
  realm: 6to
  securityConstraints:
    - authRoles:
        - ADMIN
      security-collections:
        -   omitted-methods:
              - OPTIONS
      securityCollections:
        - name: REST API ADMIN
          patterns:
            - /v1/api/teacher/*
            - /v1/api/subject/*
            - /v1/api/admin/*
    - securityCollections:
        - patterns:
            - /v1/api/students/*
  ssl-required: external
  use-resource-role-mappings: false